sudo: required
language: generic
dist: bionic

branches:
  only:
    - master

env:
  global:
    - ANDROID_HOME=$HOME/android-sdk
    - TOOLS=$ANDROID_HOME/tools
    - PATH=$ANDROID_HOME:$ANDROID_HOME/emulator:$TOOLS:$TOOLS/bin:$ANDROID_HOME/platform-tools:$PATH

    - ANDROID_COMPILE_API=29
    - ANDROID_BUILD_TOOLS=30.0.0-rc4
    - ANDROID_TOOLS_VERSION=4333796

    - GRAVIS="https://raw.githubusercontent.com/DanySK/Gravis-CI/master/"

  # Here you can set up different combinations for emulators
  # ex/ api, abi, flavor, jdk, locale, screen dimensions, screen density, etc
  matrix:
    - API=29 ABI=x86_64 EMU_FLAVOR=default JDK="1.8"
    - API=28 ABI=x86_64 EMU_FLAVOR=default JDK="1.8"
    - API=27 ABI=x86_64 EMU_FLAVOR=default JDK="1.8"
    - API=26 ABI=x86_64 EMU_FLAVOR=default JDK="1.8"
    - API=25 ABI=x86_64 EMU_FLAVOR=default JDK="1.8"
    - API=24 ABI=x86_64 EMU_FLAVOR=default JDK="1.8"
    - API=23 ABI=x86_64 EMU_FLAVOR=default JDK="1.8"
    - API=22 ABI=x86_64 EMU_FLAVOR=google_apis JDK="1.8"
    - API=21 ABI=x86_64 EMU_FLAVOR=google_apis JDK="1.8"

before_install:
  # Set up JDK 8 for Android SDK - Java is universally needed: unit tests, emulators
  - curl "${GRAVIS}.install-jdk-travis.sh" --output ~/.install-jdk-travis.sh
  - export TARGET_JDK="${JDK}"
  - JDK="1.8"
  - source ~/.install-jdk-travis.sh

  # Set up Android SDK
  - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS_VERSION.zip" -O android-sdk-tools.zip
  - unzip -q android-sdk-tools.zip -d $ANDROID_HOME
  - rm android-sdk-tools.zip
  - mkdir ~/.android # avoid harmless sdkmanager warning
  - echo 'count=0' > ~/.android/repositories.cfg # avoid harmless sdkmanager warning
  - yes | sdkmanager --licenses >/dev/null # accept all sdkmanager warnings
  - echo y | sdkmanager --no_https "platform-tools" >/dev/null
  - echo y | sdkmanager --no_https "tools" >/dev/null # A second time per Travis docs, gets latest versions
  - echo y | sdkmanager --no_https "build-tools;$ANDROID_BUILD_TOOLS" >/dev/null # Implicit gradle dependency - gradle drives changes
  - echo y | sdkmanager --no_https "platforms;android-$ANDROID_COMPILE_API" >/dev/null # We need the API of the current compileSdkVersion

install:
  # Download required emulator tools
  - echo y | sdkmanager --no_https "platforms;android-$API" >/dev/null # We need the API of the emulator we will run
  - echo y | sdkmanager --no_https --channel=3 "emulator" >/dev/null
  - echo y | sdkmanager --no_https "system-images;android-$API;$EMU_FLAVOR;$ABI" >/dev/null # install our emulator

  # Set up KVM on linux for hardware acceleration. Manually here so it only happens for emulator tests, takes ~30s
  - sudo -E apt-get -yq --no-install-suggests --no-install-recommends install bridge-utils libpulse0 libvirt-bin qemu-kvm virtinst ubuntu-vm-builder
  - sudo adduser $USER libvirt
  - sudo adduser $USER kvm


  # Create an Android emulator
  - echo no | avdmanager create avd --force -n test -k "system-images;android-$API;$EMU_FLAVOR;$ABI" -c 10M
  - |
    EMU_PARAMS="-verbose -no-snapshot -no-window -camera-back none -camera-front none -selinux permissive -qemu -m 2048"
    EMU_COMMAND="emulator"
    # This double "sudo" monstrosity is used to have Travis execute the
    # emulator with its new group permissions and help preserve the rule
    # of least privilege.
    sudo -E sudo -u $USER -E bash -c "${ANDROID_HOME}/emulator/${EMU_COMMAND} -avd test ${AUDIO} ${EMU_PARAMS} &"
  # Wait for emulator to be ready
  - chmod +x ./tools/android-wait-for-emulator.sh
  - ./tools/android-wait-for-emulator.sh
  - adb shell input keyevent 82 &

  # Switch back to our target JDK version to build and run tests
  - JDK="$TARGET_JDK"
  - source ~/.install-jdk-travis.sh

script:
  - |
    if [ "$TRAVIS_BRANCH" = "master" ]; then
      ./gradlew check --full-stacktrace
      ./gradlew connectedCheck --full-stacktrace
    fi
after_failure:
  - adb logcat TestRunner:E TRAVIS:D *:S -d

before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
  - curl "$GRAVIS.clean_gradle_cache.sh" --output ~/.clean_gradle_cache.sh
  - bash ~/.clean_gradle_cache.sh > /dev/null

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/